# -*- coding: utf-8 -*-
"""
Created on Fri Sep  2 11:34:29 2016

point : solving an ode with runge kutta method

equation : du/dx = -2*u + x + 4

method = Numerical : runge kutta
 
"""

#imports
import numpy as np
import matplotlib.pyplot as plt

#variables and constants
f = '-2*u + x + 4'
info = []
dx = 0.2
u0 = 1
x0 = 0
info.append([x0,u0])

#functions

def Calculator() :
    while info[-1][0] <= 10 :
        u = info[-1][1]
        x = info[-1][0]
        k1 = eval(f)
        u = info[-1][1] + k1 * dx/2
        x = x0 + dx/2
        k2 = eval(f)
        u = info[-1][1] + 2*k2*dx - k1*dx
        x = info[-1][0] + dx
        k3 = eval(f)
        u_new = info[-1][1] + 1/6 * (k1 + 4 * k2 + k3) * dx
        x_new = info[-1][0] + dx
        info.append([x_new,u_new])
    



#body
Calculator()


#plots
info_mat = np.asarray(info)
plt.plot(info_mat[:,0],info_mat[:,1])
plt.xlabel('x')
plt.ylabel('u')
